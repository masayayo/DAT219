@model string
@inject IJsonHelper Json;
@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager

@{
    ApplicationUser currentUser = null;

    if(signInManager.IsSignedIn(User))
    {
        currentUser = await userManager.GetUserAsync(User);
    }
}
@{
    ViewData["Title"] = "Show Tournament Matchups";
}
</script>
<style>
.label {
  color:black;
}
</style>
</style>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<div class="row">
    <div class="col-md-12 single-bracket" style="margin-top:100px;">
</div>
<div>
@if(@ViewBag.AdminUser == currentUser){
    <a asp-controller="Tournament" asp-action="editTournamentMatchups" asp-route-id="@ViewBag.TournamentId"><span class="fa fa-pencil fa-fw"></span> Administrer turneringsresultater</a>
}
</div>
<script type="text/javascript">

/* Get the json matchupdata from the controller and deserialize it */
var infojson = @Html.Raw(Newtonsoft.Json.JsonConvert.DeserializeObject(Model));

/* This json is only used if there's only the first generated round' */
var singleElimination = {"teams": [],"results": [[[]]]}

/*If infojson is the generated json string we publish the relevant data into the jQuery brackets */
if(infojson.length > 1){
   for(var i = 0; i < (infojson.length/2); i++){
    if(infojson[i].Round = 1){
      singleElimination.teams.push([infojson[i].TeamName, infojson[i+1].TeamName]);
      singleElimination.results[0][0].push([infojson[i].Score, infojson[i+1].Score]);
    }  
  }
}else{ /* Else use the json generated from the jQuery brackets library */
  singleElimination = infojson;
}

console.log("@ViewBag.AdminUser");
/* init function */
$(function() {
	  $('.single-bracket').bracket({
      init: singleElimination /* data to initialize the bracket with */ })
  })
</script>